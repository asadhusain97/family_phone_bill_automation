name: Phone bill parser

on:
  schedule:
    - cron: '*/30 * * * *' # every 30 mins

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo content
        uses: actions/checkout@v4 # checkout the repository content to github runner

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9' # install the python version needed

      # change the count in line 27 if you think you will mail twice in a day
      - name: check last run date
        id: mail_limit_check
        run: |
          TODAY=$(date +%Y-%m-%d)
          if [ -f mail_sent_counter.json ]; then
            if grep -q "$TODAY" mail_sent_counter.json; then
              COUNT=$(jq -r --arg date "$TODAY" '.[$date] // 0' mail_sent_counter.json)
              if [ "$COUNT" -gt 1 ]; then
                echo "count_exceeded=true" >> $GITHUB_OUTPUT
              else
                echo "count_exceeded=false" >> $GITHUB_OUTPUT
              fi
            else
              echo "count_exceeded=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "count_exceeded=false" >> $GITHUB_OUTPUT
          fi

      - name: install python packages
        if: steps.mail_limit_check.outputs.count_exceeded == 'false'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get install -y poppler-utils

      - name: execute py script # run main.py
        if: steps.mail_limit_check.outputs.count_exceeded == 'false'
        env:
          USER: ${{ secrets.USER }}
          GAPP_PASSWORD: ${{ secrets.GAPP_PASSWORD }}
          TRIGGER_MAIL_SENDER: ${{ secrets.TRIGGER_MAIL_SENDER }}
          SUMMARY_EMAIL_RECIPIENT: ${{ secrets.SUMMARY_EMAIL_RECIPIENT }}
          MEMBER_NAMES: ${{ secrets.MEMBER_NAMES }}
        run: python3 main.py

      - name: update mail sent counter
        if: steps.mail_limit_check.outputs.count_exceeded == 'false'
        run: |
          TODAY=$(date +%Y-%m-%d)
          if [ ! -f mail_sent_counter.json ]; then
            echo "{}" > mail_sent_counter.json
          fi
          python -c "import json; data = json.load(open('mail_sent_counter.json')); data['$TODAY'] = data.get('$TODAY', 0) + 1; json.dump(data, open('mail_sent_counter.json', 'w'))"

      - name: commit changes
        if: steps.mail_limit_check.outputs.count_exceeded == 'false'
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add mail_sent_counter.json
          git commit -m "Update mail_sent_counter.json"
          git push
